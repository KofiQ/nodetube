extends ../layout

block content


    //script(src='https://checkout.stripe.com/checkout.js')


    style.
        .stripe-button-el span {
            display: block;
            position: relative;
            padding: 0 12px;
            height: 30px;
            line-height: 30px;
            background: #1275ff;
            background-image: -webkit-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -moz-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -ms-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -o-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -webkit-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -moz-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -ms-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: -o-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            background-image: linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
            font-size: 14px;
            color: #fff;
            font-weight: bold;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
            -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
            -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
            -ms-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
            -o-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            -ms-border-radius: 4px;
            -o-border-radius: 4px;
            border-radius: 4px;
        }

        .stripe-button-el {
            overflow: hidden;
            display: inline-block;
            visibility: visible !important;
            background-image: -webkit-linear-gradient(#28a0e5, #015e94);
            background-image: -moz-linear-gradient(#28a0e5, #015e94);
            background-image: -ms-linear-gradient(#28a0e5, #015e94);
            background-image: -o-linear-gradient(#28a0e5, #015e94);
            background-image: -webkit-linear-gradient(#28a0e5, #015e94);
            background-image: -moz-linear-gradient(#28a0e5, #015e94);
            background-image: -ms-linear-gradient(#28a0e5, #015e94);
            background-image: -o-linear-gradient(#28a0e5, #015e94);
            background-image: linear-gradient(#28a0e5, #015e94);
            -webkit-font-smoothing: antialiased;
            border: 0;
            padding: 1px;
            text-decoration: none;
            -webkit-border-radius: 5px;
            -moz-border-radius: 5px;
            -ms-border-radius: 5px;
            -o-border-radius: 5px;
            border-radius: 5px;
            -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
            -moz-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
            -ms-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
            -o-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
            box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
            -webkit-touch-callout: none;
            -webkit-tap-highlight-color: transparent;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            -o-user-select: none;
            user-select: none;
            cursor: pointer;
        }

    //form(action='https://www.paypal.com/cgi-bin/webscr', method='post')
    //  // Identify your business so that you can collect the payments.
    //  input(type='hidden', name='business', value='ceo@pew.tube')
    //  // Specify a Subscribe button.
    //  input(type='hidden', name='cmd', value='_xclick-subscriptions')
    //  // Identify the subscription.
    //  input(type='hidden', name='item_name', value="Recurring PewTube Account Top-Up")
    //  //input(type='hidden', name='item_number', value='Purchase Acount Top-Up')
    //  // Set the terms of the regular subscription.
    //  input(type='hidden', name='a3', value='5.00')
    //  input(type='hidden', name='p3', value='1')
    //  input(type='hidden', name='t3', value='M')
    //  // Set recurring payments until canceled.
    //  input(type='hidden', name='src', value='1')
    //  // Provide a drop-down menu option field.
    //  input(type='hidden', name='on0', value='Format')
    //  | Format
    //  br
    //  select(name='os0')
    //    option(value='Select a format') -- Select a format --
    //    option(value='plaintext') Plain text
    //    option(value='HTML') HTML
    //  br
    //  // Display the payment button.
    //  input(type='image', name='submit', src='https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_subscribe_113x26.png', alt='Subscribe')
    //  img(alt='', width='1', height='1', src='https://www.paypalobjects.com/en_US/i/scr/pixel.gif')



    div.row
        div.col-sm-3
            h3
                a(href=`/user/${user.channelUrl}`) Channel Page
        div.col-sm-3
            h3
                a(href="/account/viewHistory") View History
        div.col-sm-3
            h3
                a(href="/account/reactHistory") React History

    p
    hr


    h2.text-center Channel Overview
    hr

    h3.text-center(style="margin-bottom:16px") PewTube Plus
    div.pt-plus.center-div.text-center
        if user.plan == 'plus'
            p Thank you so much for subscribing!
            p This area is currently being expanded
            p In the meantime enjoy your new features:
            h4 Automatic YouTube backup functionality, unlisted uploads, private uploads, 2GB upload size
        else
            p(style="white-space:pre-line;margin-bottom:19px;").
                - Upload file-size limit raised to 2GB

                - Unlisted, private and scheduled uploads

                - Livestream video, audio or screensharing (COMING SOON)

                - Access to PewTube Recording Studio (COMING SOON)

                - One-click complete YouTube backup (including future uploads)

                - Early access to all beta features

                - $4.95/month, cancel at any time

                Support #AltTech that values your privacy and free speech!

            button.stripe-button-el#customButton(type="submit" class="stripe-button-el" style="visibility: visible;")
                span(style="display: block; min-height: 30px;") Buy Now

        br
        br



    if user.plan == 'plus' || user.youtubeChannelId
        h3.ytBackup
            br
            br
            br
            h3.text-center YouTube Backup
            br

            //form
            //  .form-group
            //    .col-sm-offset-3.col-sm-7
            //      a.btn.btn-block.btn-google.btn-social(href='/auth/youtube')
            //        i.fa.fa-youtube
            //        | Sign in with YouTube
            //
            //br
            //br

        if !user.youtubeChannelId
            form.form-horizontal
                .form-group
                    label.col-sm-3.control-label(for='youtubeChannelId') YouTube Username Or Channel ID
                    .col-sm-7
                        input.form-control(type='youtubeChannelId', name='youtubeChannelId', id='youtubeChannelId')
                .form-group
                    .col-sm-offset-3.col-sm-4
                        button.btn.btn-primary.saveChannelId(type='submit')
                            i.fa.fa-pencil
                            | Save Channel Username


                br
                div.form-group.disabled
                    label.col-sm-3.control-label(for='youtubeChannelId') Status
                    .col-sm-7.disabled
                        input.disable(type='checkbox', disabled='', data-toggle='toggle')

        else
            div(style="text-align:center")
                label.control-label(for='updateStatus') YouTube Channel Id
                h5 #{user.youtubeChannelId}
                br

                label.control-label(for='updateStatus') Status
                br
                if user.userSettings.backupOn == false
                    input(id="toggle-event" type='checkbox', data-toggle='toggle')
                else if user.userSettings.backupOn == true
                    input(id="toggle-event" type='checkbox', checked='', data-toggle='toggle')
                div(id="console-event")

    br

    h3.text-center Channel Information
        br
        br
        if !user.channelUrl
            div.text-center
                h4 Upgrade! Create a new account and you can select a custom username!



        //form.upload-form(role="form" method="POST" enctype="multipart/form-data")
        form.form-horizontal(role="form" method="POST" enctype="multipart/form-data" action=`${thumbnailServer}/account/profile`)
            input(type="hidden" name="uploadToken" value=`${user.uploadToken}`)
            .form-group
                label.col-sm-3.control-label(for='channelName') Channel Username
                .col-sm-7
                    h4= user.channelUrl

            .form-group
                label.col-sm-3.control-label(for='channelName') Channel Display Name
                .col-sm-7
                    input.form-control(type='text', name='channelName', id='channelName', minlength=3, maxlength=25, value=user.channelName)

            .form-group
                label.col-sm-3.control-label(for='channelName') Channel Description
                .col-sm-7
                    textarea(id="description" name="description" maxlength='500' rows="7" cols="70") #{user.channelDescription}

            // UPLOAD FORM IF NO THUMBNAIL
            if !user.thumbnailUrl
                .form-group
                    label.col-sm-3.control-label(for='channelName') Channel Thumbnail
                    .col-sm-7
                        input.center-block.text-center(class="upload-file" data-max-size="500000000" type="file" name="filetoupload" accept="image/*")

                div.form-group
                    div.col-sm-3.
                    p.col-sm-7(style="white-space:pre-line;margin-top:-15px;margin-bottom:-1px;").
                        Thumbnail dimensions:
                        width: up to 302px,
                        height: 168px

            .form-group
                .col-sm-offset-3.col-sm-4
                    button.btn.btn.btn-primary(type='submit')
                        i.fa.fa-pencil
                        | Update Profile


        // DISPLAY THUMBNAIL IF IT EXISTS

        if user.thumbnailUrl || user.customThumbnail
            br
            br
            div.col-sm-12(style="margin-bottom:100px")

                h3.text-center Channel Thumbnail
                br
                // TODO: Sub out thumbnail here

                if user.customThumbnail
                    img.center-block.text-center(src=`${uploadServer}/${user.channelUrl}/${user.customThumbnail}` width="256px" height="168px")
                else
                    img.center-block.text-center(src=`${uploadServer}/${user._id}/unique.png` width="256px" height="168px")


                form(action=`${thumbnailServer}/api/channel/thumbnail/delete` method="POST")
                    //input(type='hidden', name='_csrf', value=_csrf)
                    input(type="hidden" name="channelUrl" value=`${user.channelUrl}`)
                    input(type="hidden" name="uploadToken" value=`${user.uploadToken}`)

                    button.btn.btn.btn-danger.center-block.text-center(type='submit' style="margin-top:20px")
                        i.fa.fa-pencil
                        | Delete

    br
    br
    br
    h3.text-center Change Password
    br

    form.form-horizontal(action='/account/password', method='POST')
        input(type='hidden', name='_csrf', value=_csrf)
        .form-group
            label.col-sm-3.control-label(for='password') New Password
            .col-sm-7
                input.form-control(type='password', name='password', id='password')
        .form-group
            label.col-sm-3.control-label(for='confirmPassword') Confirm Password
            .col-sm-7
                input.form-control(type='password', name='confirmPassword', id='confirmPassword')
        .form-group
            .col-sm-offset-3.col-sm-4
                button.btn.btn-primary(type='submit')
                    i.fa.fa-lock
                    | Change Password



    script.
      var stripeToken = '#{stripeToken}'

      var csrf = '#{_csrf}'

      // pk_test_iIpX39D0QKD1cXh5CYNUw69B
      // old key : key: 'pk_test_dam27nT47zMiJVH69kaiBBzN',
      var handler = StripeCheckout.configure({
        key: stripeToken,
        image: 'https://f001.backblazeb2.com/file/pewtube/pewtube/RCbutDM.jpg',
        locale: 'auto',
        // bitcoin: true,
        token: function (token) {

          var data = {
            _csrf: csrf,
            token
          }

          $.ajax({
            type: 'POST',
            url: `/api/purchase/plus`,
            data,
            success: function (data) {
              if (data == 'success') {
                window.location = "/account?to=pt-plus";
              } else {
                swal("Something didn't work, please contact PewTube at ceo@pew.tube or via the widget in the bottom right corner")
              }
              console.log(data);
            },
            error: function (err) {
              console.log(err);
            }
          });


          console.log(token);
          // TODO: Post this guy to the backend
        }
      });
      document.getElementById('customButton').addEventListener('click', function (e) {
        // Open Checkout with further options:
        handler.open({
          name: 'PewTube, Inc.',
          description: 'One Month Of NodeTube Plus',
          amount: 495,
          allowRememberMe: false
          // email: "customer@email.com"
        });
        e.preventDefault();
      });
      // Close Checkout on page navigation:
      window.addEventListener('popstate', function () {
        handler.close();
      });



    script.
      $(function () {

        var backupOn = #{user.userSettings.backupOn}

        function getParameterByName(name, url) {
          if (!url) url = window.location.href;
          name = name.replace(/[\[\]]/g, "\\$&");
          var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
          if (!results) return null;
          if (!results[2]) return '';
          return decodeURIComponent(results[2].replace(/\+/g, " "));

        }

        var scrollToDiv = getParameterByName('to');

        if(scrollToDiv){
          // scroll into view
          setTimeout(function () {
            $('.' + scrollToDiv).get(0).scrollIntoView();
          }, 1000)
        }

        var csrf = '#{_csrf}'

        $('.saveChannelId').on('click', function (event){
          event.preventDefault();

          var youtubeChannelId =  $('#youtubeChannelId').val();


          var data = {
            _csrf: csrf,
            youtubeChannelId : youtubeChannelId
          }

          $.ajax({
            type: 'POST',
            url: `/account/backup`,
            data,
            success: function (data) {
              console.log(data);

              if (data == 'not legit') {
                swal('Sorry this is not a valid username or channel ID please try again')
              } else if (data.message == 'updated channel id') {
                // swal('Your channel ID was saved, you will start backing up within the hour') // on confirm, refresh


                swal({
                  title: "Your channel ID was saved ", // note whether channel id or username
                  text: "Auto-backup will start within 60 minutes",
                  type: "success"
                }, function () {
                  window.location = "/account?to=ytBackup";
                });

                console.log('saved by id')
              } else if (data == 'saved channel username'){
                swal('Sorry this is not a valid username or channel ID please try again')
                console.log('saved by username')
              } else {
                swal('Sorry we didn\'t understand that')
              }

            },
            error: function (err) {
              console.log(err);
            }
          });

        })


        $('#toggle-event').change(function () {
          console.log($(this).prop('checked'));

          var checked = $(this).prop('checked');

          var data = {
            _csrf: csrf,
            backupOn : checked
          }

          $.ajax({
            type: 'POST',
            url: `/account/backup`,
            data,
            success: function (data) {
              console.log(data);

            },
            error: function (err) {
              console.log(err);
            }
          });



        })
      })

